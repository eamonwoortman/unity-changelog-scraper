# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "master", "develop" ]
  pull_request:
    branches: [ "master", "develop" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
        cache: 'pip'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Build (develop)
      if: ${{ github.ref == 'refs/heads/develop' || github.event.debug }}
      run: python unity_changelog_scraper.py --no-full-set --output-folder github-pages --print-versions --max-scrapes 6
    - name: Build (master)
      if: ${{ github.ref == 'refs/heads/master' && !github.event.debug }}
      run: python unity_changelog_scraper.py --output-folder github-pages
    - name: Github Pages Directory Listing
      uses: jayanta525/github-pages-directory-listing@v2.0.0
      with:
        # folder to start index generations
        FOLDER: github-pages 
    - name: Upload GitHub Pages artifact
      uses: actions/upload-pages-artifact@v1.0.7
      with:
        name: github-pages-artifact
        path: github-pages/
  deploy:
    needs: build
    runs-on: ubuntu-latest
    # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
    permissions:
      contents: read
      pages: write
      id-token: write
    steps:
    - name: Deploy GitHub Pages site
      uses: actions/deploy-pages@v1.2.3
      with:
        name: github-pages-artifact
