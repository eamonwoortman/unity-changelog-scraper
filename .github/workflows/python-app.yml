# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "master", "develop" ]
  pull_request:
    branches: [ "master", "develop" ]

permissions:
  contents: read

jobs:
  build:
    # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
    permissions:
      contents: read
      pages: write
      id-token: write

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
        cache: 'pip'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
#    - name: Test with pytest
#      run: |
#        pytest
    - name: Build (develop)
      if: github.ref == 'refs/heads/develop' 
      run: python unity_changelog_scraper.py --no-full-set --output-folder github-pages --print-versions
    - name: Build (master)
      if: github.ref == 'refs/heads/master'
      run: python unity_changelog_scraper.py --output-folder github-pages
    - name: Github Pages Directory Listing
      # You may pin to the exact commit or the version.
      # uses: jayanta525/github-pages-directory-listing@00c9817e589e193a844dabbdc6a179d1f77d4376
      uses: jayanta525/github-pages-directory-listing@v2.0.0
      with:
        # folder to start index generations
        FOLDER: github-pages 
    - name: GitHub Pages
      # You may pin to the exact commit or the version.
      # uses: crazy-max/ghaction-github-pages@c0d7ff0487ee0415efb7f32dab10ea880330b1dd
      uses: crazy-max/ghaction-github-pages@v3.1.0
      with:
        # Git domain (default github.com)
        #domain: # optional, default is github.com
        # GitHub repository where assets will be deployed (default $GITHUB_REPOSITORY)
        #repo: # optional
        # Git branch where assets will be deployed
        #target_branch: # optional, default is gh-pages
        # Create incremental commit instead of doing push force
        #keep_history: false # optional, default is false
        # Allow an empty commit to be created
        #allow_empty_commit: # optional, default is true
        # Build directory to deploy
        build_dir: github-pages
        # Whether to treat build_dir as an absolute path
        # absolute_build_dir: # optional, default is false
        # If enabled, the content of symbolic links will be copied
        # follow_symlinks: # optional, default is false
        # The committer name and email address
        # committer: # optional
        # The author name and email address
        # author: # optional
        # Commit message
        # commit_message: # optional
        # Write the given domain name to the CNAME file
        # fqdn: # optional
        # Allow Jekyll to build your site
        # jekyll: # optional, default is true
        # If enabled, nothing will be pushed
        dry_run: false # optional, default is false
        # Enable verbose output
        verbose: false # optional, default is false

# github_token: ${{ secrets.GITHUB_TOKEN }} # optional

